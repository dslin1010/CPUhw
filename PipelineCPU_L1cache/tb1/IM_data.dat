00000001  //nop
00000002  //nop
00000003  //nop
00000004  //nop
00000005  //nop
0c100009  //jal 0x00400024 [main]    ; 188: jal main 
00000000  //nop                      ; 189: nop 
3402000a  //ori $2, $0, 10           ; 191: li $v0 10 
0000000c  //syscall                  ; 192: syscall # syscall 10 (exit) 
//main
20080001  //addi $8, $0, 1           ; 1: addi $t0, $0, 1           //16'd9
20100001  //addi $16, $0, 1          ; 2: addi $s0, $0, 1 
00108700  //sll $16, $16, 28         ; 3: sll $s0, $s0, 28 
200a0003  //addi $10, $0, 3          ; 7: addi $t2, $0, 3 
200b001b  //addi $11, $0, 27         ; 8: addi $t3, $0, 27 
014b4820  //add $9, $10, $11         ; 9: add $t1, $t2, $t3 #add 
ae090000  //sw $9, 0($16)            ; 10: sw $t1, 0($s0) #DM[0] 
22100004  //addi $16, $16, 4         ; 11: addi $s0, $s0, 4 
014b4822  //sub $9, $10, $11         ; 12: sub $t1, $t2, $t3 #sub 
ae090000  //sw $9, 0($16)            ; 13: sw $t1, 0($s0) #DM[1] 
22100004  //addi $16, $16, 4         ; 14: addi $s0, $s0, 4 
014b4824  //and $9, $10, $11         ; 15: and $t1, $t2, $t3 #and 
ae090000  //sw $9, 0($16)            ; 16: sw $t1, 0($s0) #DM[2] 
22100004  //addi $16, $16, 4         ; 17: addi $s0, $s0, 4 
014b4825  //or $9, $10, $11          ; 18: or $t1, $t2, $t3 #or *0 
ae090000  //sw $9, 0($16)            ; 19: sw $t1, 0($s0) #DM[3] 
22100004  //addi $16, $16, 4         ; 20: addi $s0, $s0, 4 
014b4826  //xor $9, $10, $11         ; 21: xor $t1, $t2, $t3 #xor 
ae090000  //sw $9, 0($16)            ; 22: sw $t1, 0($s0) #DM[4] 
22100004  //addi $16, $16, 4         ; 23: addi $s0, $s0, 4 
014b4827  //nor $9, $10, $11         ; 24: nor $t1, $t2, $t3 #nor 
ae090000  //sw $9, 0($16)            ; 25: sw $t1, 0($s0) #DM[5] 
22100004  //addi $16, $16, 4         ; 26: addi $s0, $s0, 4 
014b482a  //slt $9, $10, $11         ; 27: slt $t1, $t2, $t3 #slt 
ae090000  //sw $9, 0($16)            ; 28: sw $t1, 0($s0) #DM[6] 
22100004  //addi $16, $16, 4         ; 29: addi $s0, $s0, 4 
000a4980  //sll $9, $10, 6           ; 30: sll $t1, $t2, 6 #sll *1 
ae090000  //sw $9, 0($16)            ; 31: sw $t1, 0($s0) #DM[7] 
22100004  //addi $16, $16, 4         ; 32: addi $s0, $s0, 4 
000b4882  //srl $9, $11, 2           ; 33: srl $t1, $t3, 2 #srl 
ae090000  //sw $9, 0($16)            ; 34: sw $t1, 0($s0) #DM[8] 
22100004  //addi $16, $16, 4         ; 35: addi $s0, $s0, 4 
0810002c  //j 0x004000b0 [Pass]      ; 39: j Pass         //Jump to 16'd44  22100004
000b4882  //srl $9, $11, 2           ; 40: srl $t1, $t3, 2 #srl 
ae090000  //sw $9, 0($16)            ; 41: sw $t1, 0($s0) #DM[9] 
22100004  //addi $16, $16, 4         ; 42: addi $s0, $s0, 4 
200a0000  //addi $10, $0, 0          ; 44: addi $t2, $0, 0 
200b0001  //addi $11, $0, 1          ; 45: addi $t3, $0, 1 
200d0001  //addi $13, $0, 1          ; 46: addi $t5, $0, 1 
200e0019  //addi $14, $0, 25         ; 47: addi $t6, $0, 25 
11ae0005  //beq $13, $14, 20 [Loopend-0x004000c4]
014b4020  //add $8, $10, $11         ; 49: add $t0, $t2, $t3 
000b5020  //add $10, $0, $11         ; 50: add $t2, $0, $t3 
00085820  //add $11, $0, $8          ; 51: add $t3, $0, $t0 
21ad0001  //addi $13, $13, 1         ; 52: add $t5, $t5, 1 
08100031  //j 0x004000c4 [Loop]      ; 53: j Loop          //16'd54  to 49 11ae0005   
8e0c0000  //lw $12, 0($16)           ; 56: lw $t4, 0($s0) #DM[10] 
22100004  //addi $16, $16, 4         ; 57: addi $s0, $s0, 4 
150c0003  //bne $8, $12, 12 [Leave-0x004000e4]
20090001  //addi $9, $0, 1           ; 59: addi $t1, $0, 1 
ae090000  //sw $9, 0($16)            ; 60: sw $t1, 0($s0) #DM[11] 
22100004  //addi $16, $16, 4         ; 61: addi $s0, $s0, 4 
03e00008  //jr $31                   ; 63: jr $ra 
00000000  //nop                      ; 64: nop 